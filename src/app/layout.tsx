
'use client';

import './globals.css';
import { Toaster } from "@/components/ui/toaster";
import type { Metadata } from 'next';
import AppLayout from './AppLayout';
import React, { useEffect } from 'react';
import { useAuth } from '@/hooks/use-auth';
import { useRouter, usePathname } from 'next/navigation';

// Metadata can't be exported from a client component, so we define it here.
// Note: This is a static definition. For dynamic metadata, further adjustments would be needed.
export const metadata: Metadata = {
  title: 'Firebase Studio App',
  description: 'Generated by Firebase Studio',
  manifest: '/manifest.json',
  themeColor: '#f85a6a',
};

const AuthProvider = ({ children }: { children: React.ReactNode }) => {
  const { isLoggedIn } = useAuth();
  const router = useRouter();
  const pathname = usePathname();

  useEffect(() => {
    const publicPaths = ['/login', '/register'];
    const pathIsPublic = publicPaths.includes(pathname);

    if (typeof window !== 'undefined') {
      if (!isLoggedIn && !pathIsPublic) {
        router.push('/login');
      } else if (isLoggedIn && pathIsPublic) {
        router.push('/');
      }
    }
  }, [isLoggedIn, pathname, router]);
  
  // Render children immediately, redirection is handled by useEffect
  return <>{children}</>;
};


export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <head>
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link
          rel="preconnect"
          href="https://fonts.gstatic.com"
          crossOrigin=""
        />
        <link
          href="https://fonts.googleapis.com/css2?family=Inter&display=swap"
          rel="stylesheet"
        ></link>
        <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no" />
      </head>
      <body className="font-body antialiased">
        <AuthProvider>
          <AppLayout>
            {children}
          </AppLayout>
        </AuthProvider>
        <Toaster />
      </body>
    </html>
  );
}
